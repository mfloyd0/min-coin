#include <algorithm>
using namespace std;

int coin1 = 0; // coin counter
int coin2 = 0;
int coin3 = 0;
int d[] = { 1,3,4 }; // coin denominations
int c[] = { coin1, coin2, coin3 }; // coin list

int mincoin(int k) // minimum coin solution
{
    if (k < 0) {    // checks less than zero
        return INT16_MAX;
    }
    else if (k == 0) {  // checks if sames as zero
        return 0;
    }
    else 
    {
        return 1 + min({ mincoin(k - d[0]), mincoin(k - d[1]), mincoin(k - d[2]) }); // recursive result
    }
}


int change(int k, int c[]) { // change maker

    if (k == 0) return 0; // counts the 4 coin if possible
    else if (k > d[2]) {
        ++c[2]; // adds to the count
        change(k - d[2], c); // recursive
    }
    else if (k > d[1]) { // counts the 3 coin if possible
        ++c[1];
        change(k - d[1], c);
    }
    else if (k >= d[0]) { // counts the 1 coin if possible
        ++c[0];
        change(k - d[0], c);
    }
}

void display(int c[]) {     //outputs coins that were added.
    while (c[2] != 0) {     // if coin 4 was used then output
        cout << d[2] << " ";
        --c[2];
    }
    while (c[1] != 0) {     // if coin 3 was used then output
        cout << d[1] << " ";
        --c[1];
    }
    while (c[0] != 0) {     // if coin 1 was used then output
        cout << d[0] << " ";
        --c[0];
    }

}



int main() {
    int amount;
    cout << "how many cents?";
    cin >> amount;

    cout << "You will recieve " << mincoin(amount) << " coins.\n";
    change(amount, c);
    std::cout << amount << " = ";
    display(c);
    cout<< endl;
   

}
